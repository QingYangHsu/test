name: C/C++ CI # 这是工作流的名称，在 GitHub Actions 中显示

on: # 这部分定义了触发工作流的事件
 push:
  branches: [ main ] # 当代码被推送到 main 分支时触发
 pull_request:
  branches: [ main ] # 当对 main 分支发起 pull request 时触发

jobs: # 定义要执行的作业列表
 build-and-test: # 这是作业的名字，可以自定义
   runs-on: ubuntu-latest # 定义作业在哪个环境下运行，这里是最新版的 Ubuntu 虚拟环境
   steps: # 定义作业中的步骤列表
   - uses: actions/checkout@v2 # 使用 GitHub 提供的 checkout 操作，以便将代码库检出到运行作业的虚拟环境上
   - name: install cppunit # 步骤的名称，可自定义
     run: sudo apt install -y libcppunit-dev # 在虚拟环境上安装 CppUnit 测试框架，它通常用于 C++ 程序的单元测试
   - name: configure # 步骤的名称，可自定义
     run: ./configure # 运行配置脚本，为后续的构建过程准备必要的环境
   - name: make # 步骤的名称，可自定义
     run: make # 使用 make 工具来编译项目
   - name: make test # 步骤的名称，可自定义
     run: make test # 执行 make 的 test 目标，通常用于运行已编写的测试